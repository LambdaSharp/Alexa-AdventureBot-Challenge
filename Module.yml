Module: LambdaSharpDemo.AdventureBot
Description: Alexa-based Choose-your-AdventureBot
Requires:

  - Module: LambdaSharp.S3
    Version: 0.5-WIP

Items:

  # TODO: Alexa skill parameters (hard-coded for now)
  - Variable: AlexaVendorId
    Value: M391VLNC7W4F15

  - Variable: AlexaClientId
    Value: amzn1.application-oa2-client.a4994f2abca8407cb0cd2fb9fe38b163

  - Variable: AlexaClientSecret
    Type: Secret
    Value: "AQICAHiCsSkJcktH01JzeuMyuierM2v8hop/BGGSMDVU54i/qQFiWgs+hRLgPkA1SbJZDtIaAAAAojCBnwYJKoZIhvcNAQcGoIGRMIGOAgEAMIGIBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDMt7ixWCewNwMt13egIBEIBbmH9qm6mAaiFLT/+gl6QOfRhLImP1TLBOvM3xk4zafLUu+fobTDAm2UnRXjahZZnRYl3yTO9HoB2qH9bR1VVa5RcrifGHnV3GO924OJB9FRGk8qjhIAaZzbEETQ=="

  # Generated using: ask util generate-lwa-tokens --scope alexa::ask:skills:readwrite
  - Variable: AlexaRefreshToken
    Type: Secret
    Value: "AQICAHiCsSkJcktH01JzeuMyuierM2v8hop/BGGSMDVU54i/qQEgP5lmWIfFzdngADsRPAzAAAACnzCCApsGCSqGSIb3DQEHBqCCAowwggKIAgEAMIICgQYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzm0mXOcYEHcHj4jWQCARCAggJSGE+43b9Y7Ox7IjU5l7t6uzxqQRP97CPA21Zb89UzZmT3qu4PY+Q5aETL45k7y57M0a/icGQtxx3+fkm5g9RyfQZjl9pJ6JdfQkr6xZzmPkJnci0AiztA5dJrUy88nrVRfp+Yu6T32WjSu/S7S7lItwf0gH2QJGpcE5PUjW3xs2LzevafT719LN/LUxdMlp0jgVlr0vfEWPZyn+ffk7xywnEfd6FmqbXD8F3mxBc+3bJ3fkkbxZW4jrsAQZVdAPoqEQfPX8qWOxoiMrSbDQXGMnUqMY+6BwEIqrCdMg59be+RJ/5osjCcmwCJcTgMHOQAqryRwA1SYqa6Grg/tY4msTtMa0OImZ/69jeQaNsd6ui+e93TA0MqOyBd8tUPWK+bfo4iwtlqAphURFQKC+oqq8rvR5wvX4N+Y5OnX1BoxAo6VAo/md4rvDcmsUOTY5kcr3Nl47orN6TM02ttkhac3+6/ci4DWDW8adIBMFIqXJCqUsxsTCgx3eGu1zZ9KCGvevVeBFjWlTej84oHrBPn0iDcgbMNfwlHNJexxkagcSP+FgQy6O9jGItI21PnBnKPX0VBOeLP74i2nY2V6FPO0+iSNqoLasVmLx5mNm7dor0P90chRJlm+a2Ul0weUHdakOsDlNHFPJQ2kjd9+29rDAUGDg2mPI792q8OTe+26AZ/cuaBsxePAQqjaT6e99yj5UM+hSNl6nfU8d5Io/AYBiKFJlLRPHVdgCF036lCAkWnhtPWbyblrpd1KJehAOFYlaTCFC2T7zF7/mMYgPwfQ2C+"

  # Parameters
  - Parameter: AdventureFile
    Description: Name of the adventure file to use
    Scope: "*"
    Default: my-demo-adventure.yml

  # Upload adventure files
  - Package: AdventureFilesPackage
    Description: Package of all adventures files to be uploaded to S3 bucket
    Files: assets/adventures/

  - Resource: AdventureFiles
    Type: LambdaSharp::S3::Unzip
    Properties:
      SourceBucket: !Ref DeploymentBucketName
      SourceKey: !Ref AdventureFilesPackage
      DestinationBucket: !Ref AdventureBucket
      DestinationKey: Adventures/

  # Upload sound files
  - Package: SoundFilesPackage
    Description: Package of all sound files to be uploaded to S3 bucket
    Files: assets/sounds/*.mp3

  - Resource: SoundFiles
    Description: Package of all sound files to be uploaded to S3 bucket
    Type: LambdaSharp::S3::Unzip
    Properties:
      SourceBucket: !Ref DeploymentBucketName
      SourceKey: !Ref SoundFilesPackage
      DestinationBucket: !Ref AdventureBucket
      DestinationKey: Sounds/

  # Upload alexa skill manifest files
  - Package: AlexaSkillManifest
    Description: Package of the Alexa skill files
    Files: assets/ask/

  - Resource: AdventureBotSkill
    Description: Alexa Skill to create
    Type: Alexa::ASK::Skill
    Properties:
      VendorId: !Ref AlexaVendorId
      AuthenticationConfiguration:
        ClientId: !Ref AlexaClientId
        ClientSecret: !Ref AlexaClientSecret::Plaintext
        RefreshToken: !Ref AlexaRefreshToken::Plaintext
      SkillPackage:
        Overrides:
          Manifest:
            publishingInformation:
              locales:
                en-US:
                  name: !Sub "${Module::FullName}-${Module::Version}"
            apis:
              custom:
                endpoint:
                  uri: !GetAtt Alexa.Arn
        S3Bucket: !Ref DeploymentBucketName
        S3BucketRole: !GetAtt AlexaRole.Arn
        S3Key: !Ref AlexaSkillManifest
    DependsOn: Alexa::Source1AlexaPermission

  - Resource: AlexaRole
    Description: Alexa role for accessing the skill manifest on S3
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Sid: AlexaPrincipal
          Effect: Allow
          Principal:
            Service: alexa-appkit.amazon.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}AlexaS3BucketPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AlexaS3BucketAccess
                Effect: Allow
                Action: s3:GetObject
                Resource: !Sub "arn:aws:s3:::${DeploymentBucketName}/${AlexaSkillManifest}"

  - Resource: AdventureFinishedTopic
    Scope: "*"
    Description: SNS topic to notify when a player finishes an adventure
    Type: AWS::SNS::Topic
    Allow: Publish

  # Create bucket for adventure and sounds files
  - Resource: AdventureBucket
    Scope: "*"
    Description: S3 Bucket for storing adventure assets
    Type: AWS::S3::Bucket
    Allow: ReadWrite

  - Resource: SoundFilesPolicy
    Scope: "*"
    Description: Access policy for sound files in S3 bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AdventureBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${AdventureBucket}/Sounds/*"
            Principal: "*"

  # Create table for player state
  - Resource: PlayerTable
    Scope: "*"
    Description: DynamoDb table for storing player progression in their adventure
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PlayerId
          AttributeType: S
      KeySchema:
        - AttributeName: PlayerId
          KeyType: HASH

  - Function: Alexa
    Description: Alexa Skill handler for AdventureBot
    Memory: 128
    Timeout: 30
    Sources:
      - Alexa: "*"
      # TODO: limit invocation to Alexa skill ID
      # - Alexa: !Ref AdventureBotSkill
